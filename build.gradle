plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.9'
    id 'org.beryx.jlink' version '2.21.1'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    implementation 'com.github.almasb:fxgl:11.15'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

javafx {
    version = "11.0.2"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.swing', 'javafx.media' ]
}

application {
    mainClass = "com.adrianghub.zombie.ZombieApp"
    mainModule = "zombie.fxgl.main"
}


ext.os = org.gradle.internal.os.OperatingSystem.current()

jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'Survivor'
    }
    jpackage {
        // Let the plugin detect the path to the JDK providing the jpackage tool by searching the locations indicated by:
        //  - the badass.jlink.jpackage.home system property
        //  - the BADASS_JLINK_JPACKAGE_HOME environment variable
        //  - the java.home system property
        //  - the JAVA_HOME environment variable
        //
        //   OR
        //
        // explicitly configure the below property:
        // jpackageHome = '/usr/lib/jvm/jdk14'
        //
        //   OR
        //
        // download and extract a JDK that contains the jpackage tool by setting the system property 'download.jpackage':
        if(Boolean.getBoolean('download.jpackage')) {
            jpackageHome = downloadJPackage()
        }

        if(os.macOsX) {
            jvmArgs = ["-Duser.dir=/tmp"]
            installerOptions = [
//                '--mac-sign',
//                '--mac-signing-key-user-name', System.getenv('SIGNING_KEY_USER_NAME'),
//                '--mac-signing-keychain', System.getenv('SIGNING_KEYCHAIN_PATH')
            ]
        } else if(os.windows) {
            installerOptions = ['--win-per-user-install', '--win-dir-chooser', '--win-menu']
//        } else {
//            installerType = 'deb' // 'rpm'
        }
        installerOptions += '--verbose'
    }
}